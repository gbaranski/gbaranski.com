<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on gbaranski blog</title><link>/posts/</link><description>Recent content in Posts on gbaranski blog</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Copyright Â© 2021, gbaranski &lt;a href='https://github.com'>Github&lt;/a></copyright><lastBuildDate>Mon, 17 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Comparison of password managers and my setup</title><link>/posts/password-managers/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>/posts/password-managers/</guid><description>Introduction For a long time I was looking for a password manager which would meet all the following requirements:
Open-source, CLI/TUI application must not be written in any scripting language. I don&amp;rsquo;t want slow startup time, I might use a password manager in scripts and 0.5s startup time is unacceptable. Android &amp;amp; Linux support, Option for self-hosting, Must be relatively easy to synchronize between multiple computers, must work on Linux and Android.</description></item><item><title>Creating ncurses-like TUI Applications in Rust using Cursive</title><link>/posts/rust-tui/</link><pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate><guid>/posts/rust-tui/</guid><description>Introduction A post describing creating a TUI application in Rust for the Houseflow project. It enables triggering events, like turning on lights, on connected IoT devices.
Goal The goal of this project is to create something similar to ncspot, a Spotify client in CLI that uses the cursive.
Getting started The first step is to initialize an empty project
cargo new --bin rust-blog-tui This will create a directory with the given name and few files inside.</description></item></channel></rss>